#set ( $XML_CLASS = "${beanClass.name}Xml" )
#set ( $debug = '0' )
//-----------------------------------------------------------
// Standard XML mapper for Telosys 1.0.0
//-----------------------------------------------------------
// This is a generated class. Avoid customizing code here !
// Generated by $generator.name - version : $generator.version
// Date : $today.date - Time $today.time
//-----------------------------------------------------------
// This class was generated by the standard template
// Template name    : vo_xml.vm
// Template author  : Laurent GUERIN 
// Template version : 1.0.0 ( September 17 - 2011 ) 
//-----------------------------------------------------------
// NB : if you change an XML Mapper keep in mind that it must be THREAD SAFE ! 
//      ( used as a SINGLE INSTANCE OBJECT )
//-----------------------------------------------------------

package ${target.javaPackageFromFolder($SRC)} ;

import java.io.PrintWriter;

import org.objectweb.telosys.rpl.xml.IXmlWrapper;
import org.objectweb.telosys.rpl.xml.XmlWrapperAncestor;

import $beanClass.fullName;

/**
 * @author TELOSYS GENERATOR
 *
 * XML wrapper class for the Value Object (bean) $beanClass.name
 * IXmlWrapper implementation 
 * ( the method getBeanClass is implemented in XmlWrapperAncestor )
 */
public class $XML_CLASS extends XmlWrapperAncestor implements IXmlWrapper
{
    /*
     * Default constructor
     */
    public $XML_CLASS()
    {
        super(${beanClass}.class);
    }
    
	//-----------------------------------------------------------------------------------
    /* 
     * Interface Implementation ( see Telosys IXmlWrapper )
     */
    public Object createBean()
    {
        return new ${beanClass}();
    }

	//-----------------------------------------------------------------------------------
	/* 
	 * Interface Implementation ( see Telosys IXmlWrapper )
	 * 
	 * Set the values received in XML format
	 * ( the "XML entities" are processed by the parser => no conversion needed )
	 */
    public void setXmlFieldValue(Object oBean, String sName, String sValue)
    {
        if (oBean != null)
        {
            if (oBean instanceof ${beanClass})
            {
                ${beanClass} vo = (${beanClass}) oBean;
## ----------
#foreach( $attrib in $beanClass.attributes )
##              if (sName.equals("$attrib.name"))
##              if (sName.equals("$attrib.name.toLowerCase()"))
                if (sName.equals("$attrib.name"))
                {
#if ( $attrib.typeIsUsableInXml )
#if ( $attrib.fullType == "java.lang.String" )    
                    vo.${attrib.setter}( sValue ); // type : $attrib.fullType
#else
#if ( $attrib.isPrimitiveType )
                    if ( isNullOrVoid(sValue) ) return ; // Primitive type cannot be null, keep initial bean value
#end
#if ( $attrib.hasDefaultValue )
                    // This attribute has a default value : ${attrib.defaultValue}
#else
                    // No default value for this attribute
#end
#if ( $attrib.isPrimitiveType && $attrib.hasDefaultValue )
                    vo.${attrib.setter}( ${attrib.xmlGetter}(sName,sValue,(${attrib.type})${attrib.defaultValue}) ); // type : $attrib.fullType
#else
                    vo.${attrib.setter}( ${attrib.xmlGetter}(sName,sValue) ); // type : $attrib.fullType
#end
#end
#else
					// The type "${attrib.fullType}" of attribute "$attrib.name" is not usable in XML mapper
#end
                    return;
                }
#end
## ----------
                //--- Unknown attribute
                throwException("unknown attribute '" + sName + "' in setXmlFieldValue(" + sName + "," + sValue + ")");
            }
            else
            {
                throwException("bean is an instance of '" + oBean.getClass().getName() + "' ( ${beanClass} expected )");
            }
        }
        else
        {
            throwException("bean is null");
        }
	}

	//-----------------------------------------------------------------------------------
	/*
	 * Interface Implementation ( see Telosys IXmlWrapper )
	 * 
	 * This method is called to serialize the given bean in XML format (produce an XML tag) 
	 */
	public void toXml(PrintWriter out, Object oBean, String sTagName)
	{
        if (oBean != null)
        {
            if ( oBean instanceof $beanClass )
            {
                $beanClass vo = ($beanClass) oBean ;
            
                out.print("<" + sTagName + " ");
## ----------
#foreach( $attrib in $beanClass.nonTextAttributes )
## #set ( $xmlattrib = $attrib.name.toLowerCase() )
## #set ( $xmlattrib = $attrib.name )
#set ( $xmlattrib = $attrib.name )
## -----
#if ( $attrib.typeIsUsableInXml )
#if ( $attrib.needsXmlConversion )
#if ( $attrib.needsXmlConversionParams )
                out.print("$xmlattrib=\"" + attributeString( vo.${attrib.getter}(), ${attrib.xmlConversionParams} ) + "\" "); // type : $attrib.fullType
#else
                out.print("$xmlattrib=\"" + attributeString( vo.${attrib.getter}() ) + "\" "); // type : $attrib.fullType
#end
#else
                out.print("$xmlattrib=\"" + vo.${attrib.getter}() + "\" "); // type : $attrib.fullType
#end
#else
				// The type "${attrib.fullType}" of attribute "$attrib.name" is not usable in XML mapper
#end  
## (end_of_if_typeIsUsableInXml)
## -----
#end  
## (end_of_foreach) 
## ----------
#if ( $beanClass.hasTextAttribute )
                out.println(">");
#foreach( $attrib in $beanClass.textAttributes )
                generateTextTag(out, "$attrib.name.toLowerCase()", vo.${attrib.getter}());
#end
                out.print("</" + sTagName + ">");
#else
                out.println("/>");
#end
            }
            else
            {
                throwException("bean is an instance of '" + oBean.getClass().getName() + "' ( ${beanClass} expected )");
            }
        }
		else
		{
			out.print("<!-- " + sTagName + " : no instance (null) -->");
		}
	}
	//-----------------------------------------------------------------------------------
#if ( $debug == '1' )
//-----------------------------------------------------------------------------------
// VELOCITY CONTEXT ( DEBUG MODE )
//-----------------------------------------------------------------------------------
#foreach( $a in $beanClass.attributes )
// name=$a.name / type=$a.type / fullType=$a.fullType / getter=$a.getter / setter=$a.setter
// needsXmlConversion = $a.needsXmlConversion
// needsXmlConversionParams = $a.needsXmlConversionParams  ( xmlConversionParams = $a.xmlConversionParams ) 
//-----
#end
//-----------------------------------------------------------------------------------
#end
}
